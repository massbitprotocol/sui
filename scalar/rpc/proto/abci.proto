/*
 *
 * Copyright 2018 gRPC authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

 syntax = "proto3";

 package abci;

 message CallContractRequest {
  string sender = 1;
  string destination_chain = 2;
  string destination_contract_address = 3;
  bytes payload_hash = 4;
  bytes payload = 5;
 }

 message CallContractResponse {
  
 }

 message RequestArk {
  string payload = 1;
 }

 message ScalarOutTransaction {
  string message = 1;
 }

 message KeygenOutput {
    bytes pub_key = 1; 
 }

 // ScalarAbciRequest is the request for ScalarAbci.
 message ScalarAbciRequest {
   string payload = 1; 
 }

 // ScalarAbciResponse is the response for ScalarAbci.
 message ScalarAbciResponse {
   oneof message {
    RequestArk ark = 1;
    ScalarOutTransaction tran = 2;
    KeygenOutput keygen = 3;
   }

 }

 // Echo is the echo service.
 service ScalarAbci {
   // UnaryEcho is unary echo.
   rpc UnaryScalarAbci(ScalarAbciRequest) returns (ScalarAbciResponse) {}
   // ServerStreamingEcho is server side streaming.
   rpc ServerStreamingScalarAbci(ScalarAbciRequest) returns (stream ScalarAbciResponse) {}
   // ClientStreamingEcho is client side streaming.
   rpc ClientStreamingScalarAbci(stream ScalarAbciRequest) returns (ScalarAbciResponse) {}
   // BidirectionalStreamingScalarAbci is bidi streaming.
   rpc BidirectionalStreamingScalarAbci(stream ScalarAbciRequest) returns (stream ScalarAbciResponse) {}
 }